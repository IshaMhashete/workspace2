package com.lti.dao;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;

import com.lti.entity.Customer;

public class CustomerDao {
	public void add(Customer customer) {
		//Step1. Create/obtain  EntityManagerFactory object
		//During this step, META-INF/persistence.xml file will be read
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("oracleTest"); //persistence-unit name
		
		//Step2. Create/obtain EntityManager object
		EntityManager em = emf.createEntityManager();
		
		//Step3. Start/Participate in a Transaction
		//DML operations cannot be performed without a Transaction
		EntityTransaction tx = em.getTransaction();
		tx.begin();
		
		//Now we can insert/update/delete/select whatever we want
		em.persist(customer); //persist method generates insert query
		
		tx.commit();
		
		em.close();
		emf.close();
		
		
	}
	
	public Customer fetch(int customerId) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("oracleTest");
		EntityManager em = emf.createEntityManager();
		
		//used to fetch data based on Primary key
		Customer cust = (Customer) em.find(Customer.class, customerId); //name of class(Customer.class) which will get the table name from the class
		
		//no transaction written since SELECT is not DML actions.
		
		em.close();
		emf.close();
		
		return cust;
	}
	
	public List<Customer> fetchAll(){
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("oracleTest");
		EntityManager em = emf.createEntityManager();
		
		//JPQL (diff syntax of 'select' query in hibernate)
		Query q = em.createQuery("select c from Customer c"); //eqal to select * from Customer c(alias)
		List<Customer> list = q.getResultList();
		
		
		em.close();
		emf.close();
		return list;
		
	}
	
	public void update(Customer customer) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("oracleTest"); //persistence-unit name
		
		EntityManager em = emf.createEntityManager();
		
		EntityTransaction tx = em.getTransaction();
		tx.begin();
		
		em.merge(customer); //persist method generates insert query
		
		tx.commit();
		
		em.close();
		emf.close();
		
		
	}

}
